#!/bin/bash
# functions file for nntools
#
# @author webworker01
#

checkRepo () {
    if [ -z $1 ] ; then
        return
    fi
    repo=(${repos[$1]})
    prevdir=${PWD}

    cd $repo

    git remote update > /dev/null 2>&1

    localrev=$(git rev-parse HEAD)
    remoterev=$(git rev-parse ${repo[1]})
    cd $prevdir

    if [ $localrev != $remoterev ]; then
        printf "${RED}[U]${NC}"
    fi
}

calcFee()
{
    local vins=$1
    local vouts=$2
    local scripttypein=$3
    local scripttypeout=$4

    if [[ $scripttypein == "p2pk" ]]; then
        local vinmultiplier=114
    else
        local vinmultiplier=150
    fi

    if [[ $scripttypeout == "p2pk" ]]; then
        local voutmultiplier=44
    else
        local voutmultiplier=35
    fi

    local size=$(bc -l <<< "${vins} * ${vinmultiplier} + ${vouts} * ${voutmultiplier} + 30")
    local fee=$( printf "%.8f" $(bc -l <<< "${size} / 1000 * ${txfeeperkb}") )
    # log "calcfee" "size: ${size} fee: ${fee}" "" "file"

    echo "${fee}"
}

# @return (1|0)
isSapling()
{
    local coin=$1
    if [[ ! ${sproutcoins[*]} =~ ${coin} ]]; then
        echo 1
    else
        echo 0
    fi
}

sendRaw()
{
    local rawtx=$1
    local acname=$2

    if [[ ! -z $acname ]] && [[ $acname != "KMD" ]]; then
        coin=$acname
        asset=" -ac_name=${acname}"
    else
        coin="KMD"
        asset=""
    fi

    sapling=$(isSapling $coin)

    if [[ ! -z $rawtx ]]; then
        # nlocktime=$(printf "%08x" $(date +%s) | dd conv=swab 2> /dev/null | rev)
        nlocktime="00000000"

        if (( sapling > 0 )); then
            txtail="000000000000000000000000000000"
            hex=${rawtx::-38}${nlocktime}${txtail}
        else
            hex=${rawtx::-8}${nlocktime}
        fi

        signedtx=$(komodo-cli $asset signrawtransaction $hex | jq -r '.hex')

        if [[ ! -z $signedtx ]]; then
            rawtxid=$(komodo-cli $asset sendrawtransaction $signedtx)
        else
            rawtxid="failed no signed tx"
        fi

        echo "${rawtxid}"
    else
        echo "failed"
    fi
}

timeSince ()
{
    local currentimestamp=$(date +%s)
    local timecompare=$1

    if [ ! -z $timecompare ] && [[ $timecompare != "null" ]]; then
        local t=$((currentimestamp-timecompare))

        local d=$((t/60/60/24))
        local h=$((t/60/60%24))
        local m=$((t/60%60))
        local s=$((t%60))

        if (( d > 0 )); then
            echo -n "${d}D"
        fi
        if (( d < 2 && h > 0 )); then
            echo -n "${h}h"
        fi
        if (( d == 0 && h < 4 && m > 0 )); then
            echo -n "${m}m"
        fi
        if (( d == 0 && h == 0 && m == 0 )); then
            echo -n "${s}s"
        fi
    fi
}
